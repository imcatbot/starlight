#! /bin/sh

export PATH=$PATH:/usr/local/bin:/usr/local/sbin
export TERM=linux-basic

# redirect the output of the cmd to /dev/null
cmd_to_null() 
{
    $@ >/dev/null 2>&1
}

#echo -e "\t\tWelcome to \033[31mStarLight\033[0m Linux"   
dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --pause "press <Cancel> to abort installation" \
    10 50 15
x=$? 
if [ $x -ne 0 ]
then
    reboot
fi

[ -d /dev ]  || mkdir -m 0755 /dev
[ -d /root ] || mkdir -m 0700 /root
[ -d /sys ]  || mkdir /sys
[ -d /proc ] || mkdir /proc
[ -d /tmp ]  || mkdir /tmp

mkdir -p /var/lock
mount -t sysfs -o nodev,noexec,nosuid none /sys
mount -t proc -o nodev,noexec,nosuid none /proc

dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --infobox "Initialize udev..." \
    10 50 

# Note that this only becomes /dev on the real filesystem if udev's scripts
# are used; which they will be, but it's worth pointing out
tmpfs_size="10M"
if [ -e /etc/udev/udev.conf ]; then
	cmd_to_null . /etc/udev/udev.conf
fi
if ! cmd_to_null mount -t devtmpfs -o mode=0755 none /dev; then
	cmd_to_null mount -t tmpfs -o size=$tmpfs_size,mode=0755 udev /dev
	[ -e /dev/console ] || mknod -m 0600 /dev/console c 5 1
	[ -e /dev/null ] || mknod /dev/null c 1 3
fi
mkdir /dev/pts
mount -t devpts -o noexec,nosuid,gid=5,mode=0620 none /dev/pts || true

UDEV_ROOT=/dev \
cmd_to_null udevd --daemon --resolve-names=never

cmd_to_null udevadm trigger --action=add
cmd_to_null udevadm settle || true

if [ -d /sys/bus/scsi ]; then
	modprobe -q scsi_wait_scan && modprobe -r scsi_wait_scan || true
	udevadm settle || true
fi

dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --infobox "Partition disk..." \
    10 50

FDISK=fdisk
DEVICE=/dev/hda
[ -e /dev/sda ] && DEVICE=/dev/sda
[ -e /dev/vda ] && DEVICE=/dev/vda

if fdisk -l /dev/sda|grep GB >/dev/null
then
    DISK_TOTAL_SIZE=`fdisk -l /dev/sda|grep GB|awk '{print $3}'|sed -e 's/\..*//'`
else
    DISK_TOTAL_SIZE=`fdisk -l /dev/sda|grep MB|awk '{print $3}'|sed -e 's/\..*//'`
    DISK_TOTAL_SIZE=`expr $DISK_TOTAL_SIZE / 1024`
fi

if [ $DISK_TOTAL_SIZE -le 4 ]
then
    echo "The avaliable disk is too small"
    echo "press enter key to continue"
    read
    reboot
fi

# clean up all partitions
dd of=$DEVICE if=/dev/zero bs=512 count=1

# create new partitions
$FDISK $DEVICE >/dev/null <<EOF
n
p
1

+512M
n
e
4


n
l


a
1
w
EOF

dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --infobox "Loading device-mapper..." \
    10 50

# load device-mapper drivers
cmd_to_null modprobe dm_mod
cmd_to_null modprobe dm_mirror
cmd_to_null modprobe dm_snapshot

# calculate size of swap and root partition
SWAP_SIZE=
ROOT_SIZE=
echo "TOTAL SIZE="$DISK_TOTAL_SIZE

if [ ${DISK_TOTAL_SIZE} -le 10 ]
then
    SWAP_SIZE=2G
    ROOT_SIZE=4G
elif [ ${DISK_TOTAL_SIZE} -le 20 ]
then
    SWAP_SIZE=4G
    ROOT_SIZE=80%FREE
else
    SWAP_SIZE=4G
    ROOT_SIZE=12G
fi

dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --infobox "Createing lvm..." \
    10 50

# create lvm
cmd_to_null lvm pvcreate ${DEVICE}5 
cmd_to_null lvm vgcreate vg ${DEVICE}5
cmd_to_null lvm lvcreate -n swap -L ${SWAP_SIZE} vg
cmd_to_null lvm lvcreate -n root -L ${ROOT_SIZE} vg
cmd_to_null lvm lvcreate -n home -l 100%FREE vg

cmd_to_null lvm vgchange -a y

dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --infobox "Formating disk..." \
    10 50

cmd_to_null mkfs.ext4 ${DEVICE}1
cmd_to_null mkfs.ext4 /dev/vg/root
cmd_to_null mkfs.ext4 /dev/vg/home
cmd_to_null mkswap /dev/vg/swap

# mount device
dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --infobox "Mounting partition..." \
    10 50
mkdir -p /sysroot
mkdir -p /mnt

mount -t ext4 /dev/mapper/vg-root /sysroot

mkdir -p /sysroot/boot
mount -t ext4 ${DEVICE}1 /sysroot/boot

mkdir -p /sysroot/home
mount -t ext4 /dev/mapper/vg-home /sysroot/home

mount -t iso9660 /dev/sr0 /mnt

dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --infobox "Installing root filesystem..." \
    10 50

cmd_to_null tar -zxvf /mnt/rootfs.tgz -C /sysroot 

dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --infobox "Installing root filesystem compeleted" \
    10 50

mkdir -p /sysroot/proc
mkdir -p /sysroot/dev
mkdir -p /sysroot/sys

cd /sysroot
mount --bind /proc proc 
mount --bind /dev dev 
mount --bind /sys sys

KERN_VERSION=`chroot . ls /lib/modules/|head -1`
dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --infobox "Making initrd kernel $KERN_VERSION..." \
    10 50

chroot . mkinitramfs -o /boot/initrd.img-${KERN_VERSION} ${KERN_VERSION}

dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --infobox "Installing grub to ${DEVICE}..." \
    10 50
chroot . grub-install ${DEVICE}

# grub config
dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --infobox "Generating grub config..." \
    10 50
chroot . grub-mkconfig -o /boot/grub/grub.cfg

#create new fstab
dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --infobox "Creating fstab..." \
    10 50
cat >/sysroot/etc/fstab <<EOF
# <file system> <mount point>   <type>  <options>       <dump>  <pass>
proc            /proc         proc    defaults        0       0
${DEVICE}1       /boot         ext4     defaults        0       1
/dev/mapper/vg-home  /home    ext4     defaults        0       1
/dev/mapper/vg-root  /        ext4     defaults        0       1
/dev/mapper/vg-swap  none     swap    sw              0       0

EOF

# re-generate an init for new system
dialog --backtitle "Welcome to StarLight Linux" \
    --title "Installation" \
    --cancel-label "Shell" \
    --ok-label "Reboot" \
    --pause "Installation completed, press <Reboot> to reboot computer" \
    10 50 15
x=$?
if [ $x -ne 0 ]
then
    /bin/sh "$@" </dev/console
else
    reboot
fi
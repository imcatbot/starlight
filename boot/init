#!/bin/sh

echo -e "\t\tWelcome to \033[31mStarLight\033[0m Linux"   

echo "Fisrt, partition..."
echo "Second, tar filesystem"
echo "Third, modify etc/fstab and install grub"
echo "Reboot syste"

[ -d /dev ] || mkdir -m 0755 /dev
[ -d /root ] || mkdir -m 0700 /root
[ -d /sys ] || mkdir /sys
[ -d /proc ] || mkdir /proc
[ -d /tmp ] || mkdir /tmp
mkdir -p /var/lock
mount -t sysfs -o nodev,noexec,nosuid none /sys
mount -t proc -o nodev,noexec,nosuid none /proc

# Note that this only becomes /dev on the real filesystem if udev's scripts
# are used; which they will be, but it's worth pointing out
tmpfs_size="10M"
if [ -e /etc/udev/udev.conf ]; then
	. /etc/udev/udev.conf
fi
if ! mount -t devtmpfs -o mode=0755 none /dev; then
	echo "W: devtmpfs not available, falling back to tmpfs for /dev"
	mount -t tmpfs -o size=$tmpfs_size,mode=0755 udev /dev
	[ -e /dev/console ] || mknod -m 0600 /dev/console c 5 1
	[ -e /dev/null ] || mknod /dev/null c 1 3
fi
mkdir /dev/pts
mount -t devpts -o noexec,nosuid,gid=5,mode=0620 none /dev/pts || true

UDEV_ROOT=/dev \
udevd --daemon --resolve-names=never

udevadm trigger --action=add
udevadm settle || true

if [ -d /sys/bus/scsi ]; then
	modprobe -q scsi_wait_scan && modprobe -r scsi_wait_scan || true
	udevadm settle || true
fi

# Now enter shell
export PATH=$PATH:/usr/local/bin:/usr/local/sbin:

/bin/sh "$@" </dev/console
echo "partiion disk..."
FDISK=fdisk
DEVICE=/dev/hda
[ -e /dev/sda ] && DEVICE=/dev/sda
[ -e /dev/vda ] && DEVICE=/dev/vda


which gfdisk && FDISK=gfdisk

# clean up all partitions
dd of=$DEVICE if=/dev/zero bs=512 count=1

# create new partitions
$FDISK $DEVICE <<EOF
n
p
1

+1024M
n
e
4


n
l


a
1
w
EOF

# load device-mapper drivers
modprobe dm_mod
modprobe dm_mirror
modprobe dm_snapshot

# create lvm
lvm pvcreate ${DEVICE}5
lvm vgcreate vg ${DEVICE}5
lvm lvcreate -n swap -L 4G vg
lvm lvcreate -n root -L 4G vg
lvm lvcreate -n home -l 100%FREE vg

lvm vgchange -a y

mkfs.ext4 /dev/sda1
mkfs.ext4 /dev/vg/root
mkfs.ext4 /dev/vg/home
mkswap /dev/vg/swap

# mount device
mkdir -p /sysroot
mkdir -p /mnt

mount -t ext4 /dev/mapper/vg-root /sysroot

mkdir -p /sysroot/boot
mount -t ext4 /dev/sda1 /sysroot/boot

mkdir -p /sysroot/home
mount -t ext4 /dev/mapper/vg-home /sysroot/home

mount -t iso9660 /dev/sr0 /mnt
#exec /bin/sh "$@" </dev/console
echo "Install files..."
tar -zxvf /mnt/rootfs.tgz -C /sysroot >/dev/null

mkdir -p /sysroot/proc
mkdir -p /sysroot/dev
mkdir -p /sysroot/sys

cd /sysroot
mount --bind /proc proc 
mount --bind /dev dev 
mount --bind /sys sys

echo "Install grub..."
chroot . grub-install /dev/sda

# grub config
chroot . grub-mkconfig

#create new fstab
cat >/sysroot/etc/fstab <<EOF
# <file system> <mount point>   <type>  <options>       <dump>  <pass>
proc            /proc         proc    defaults        0       0
/dev/sda1       /boot         ext4     defaults        0       1
/dev/mapper/vg-home  /home    ext4     defaults        0       1
/dev/mapper/vg-root  /        ext4     defaults        0       1
/dev/mapper/vg-swap  none     swap    sw              0       0

EOF

/bin/sh "$@" </dev/console
reboot